tosca_definitions_version: tosca_simple_1.0

description: >
  TOSCA simple profile with wordpress, web server and mysql on the same server.

imports:
  - wordpress.yaml

inputs:
  cpus:
    type: integer
    description: Number of CPUs for the server.
    constraints:
      - valid_values: [ 1, 2, 4, 8 ]
  db_name:
    type: string
    description: The name of the database.
  db_user:
    type: string
    description: The user name of the DB user.
  db_pwd:
    type: string
    description: The WordPress database admin account password.
  db_root_pwd:
    type: string
    description: Root password for MySQL.
  db_port:
    type: integer
    description: Port for the MySQL database.

node_templates:
  wordpress:
    type: tosca.nodes.WebApplication.WordPress
    requirements:
      - host: webserver
      - database_endpoint: mysql_database
    interfaces:
      tosca.interfaces.node.Lifecycle:
         create: Scripts/WordPress/install.sh
         configure:
           implementation: Scripts/WordPress/configure.sh
           inputs:
             wp_db_name: { get_property: [ mysql_database, db_name ] }
             wp_db_user: { get_property: [ mysql_database, db_user ] }
             wp_db_password: { get_property: [ mysql_database, db_password ] }

  mysql_database:
    type: tosca.nodes.Database
    properties:
      db_name: { get_input: db_name }
      db_user: { get_input: db_user }
      db_password: { get_input: db_pwd }
    requirements:
      - host: mysql_dbms
    interfaces:
      tosca.interfaces.node.Lifecycle:
         configure:
            implementation: Scripts/MYSQLDatabase/configure.sh
            inputs:
              db_name: { get_property: [ SELF, db_name ] }
              db_user: { get_property: [ SELF, db_user ] }
              db_password: { get_property: [ SELF, db_password ] }
              db_root_password: { get_property: [ mysql_dbms, dbms_root_password ] }

  mysql_dbms:
    type: tosca.nodes.DBMS
    properties:
      dbms_root_password: { get_input: db_root_pwd }
      dbms_port: { get_input: db_port }
    requirements:
      - host: server
    interfaces:
      tosca.interfaces.node.Lifecycle:
        create: Scripts/MYSQLDBMS/install.sh
        start: Scripts/MYSQLDBMS/start.sh
        configure:
          implementation: Scripts/MYSQLDBMS/configure.sh
          inputs:
            db_root_password: { get_property: [ mysql_dbms, dbms_root_password ] }

  webserver:
    type: tosca.nodes.WebServer
    requirements:
      - host: server
    interfaces:
      tosca.interfaces.node.Lifecycle:
        create: Scripts/WebServer/install.sh
        start: Scripts/WebServer/start.sh

  server:
    type: tosca.nodes.Compute
    properties:
      # compute properties (flavor)
      disk_size: 10
      num_cpus: { get_input: cpus }
      mem_size: 4096
      # host image properties
      os_arch: x86_64
      os_type: Linux
      os_distribution: Fedora
      os_version: 18

outputs:
  website_url:
    description: IP address for Wordpress wiki.
    value: { get_attribute: [server, ip_address] }
