tosca_definitions_version: tosca_simple_yaml_1_0_0

description: >
  TOSCA simple profile with nodejs and mongodb.

imports:
  - custom_types/nodejs.yaml

dsl_definitions:
  host_capabilities: &host_capabilities
    disk_size: 10 GB
    num_cpus: 1
    mem_size: 4096 MB
  os_capabilities: &os_capabilities
    architecture: x86_64
    type: Linux
    distribution: Ubuntu
    version: 14.04

topology_template:
  inputs:
    my_cpus:
      type: integer
      description: Number of CPUs for the server.
      constraints:
        - valid_values: [ 1, 2, 4, 8 ]
      default: 1
    github_url:
       type: string
       description: The URL to download nodejs.
       default:  https://github.com/sample.git

  node_templates:
    nodejs:
      type: tosca.nodes.SoftwareComponent.Nodejs
      properties:
          github_url: https://github.com/sample.git
      requirements:
        - host:
            capability: tosca.capabilities.Container
            node: app_server
            relationship: tosca.relationships.HostedOn
      interfaces:
        Standard:
          create: nodejs/create.sh
          configure:
            implementation: nodejs/config.sh
            inputs:
              github_url: { get_property: [ SELF, github_url ] }
              mongodb_ip: { get_attribute: [mongo_server, private_address] }
          start: nodejs/start.sh
    mongo_dbms:
      type: tosca.nodes.DBMS
      requirements:
        - host: 
            capability: tosca.capabilities.Container
            node: mongo_server
            relationship: tosca.relationships.HostedOn
      properties:
        port: 27017
      interfaces:
        Standard:
          create: mongodb/create.sh
          configure:
            implementation: mongodb/config.sh
            inputs:
              mongodb_ip: { get_attribute: [mongo_server, private_address] }
          start: mongodb/start.sh
    mongo_server:
      type: tosca.nodes.Compute
      capabilities:
        host:
          properties: *host_capabilities
        os:
          properties: *os_capabilities
    app_server:
      type: tosca.nodes.Compute
      capabilities:
        host:
          properties: *host_capabilities
        os:
          properties: *os_capabilities

  outputs:
    nodejs_url:
      description: URL for the nodejs server, http://<IP>:3000
      value: { get_attribute: [app_server, private_address] }
    mongodb_url:
      description: URL for the mongodb server.
      value: { get_attribute: [mongo_server, private_address] }
